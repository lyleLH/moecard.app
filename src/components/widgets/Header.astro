---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import Twemoji from '~/components/common/Twemoji.astro';
import LanguageSelector from '~/components/common/LanguageSelector.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  class?: string;
  type?: string;
}

interface Props {
  id?: string;
  links?: Array<Link>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'right',
} = Astro.props;

const currentPath = new URL(Astro.request.url).pathname;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out backdrop-blur-sm bg-white/80 dark:bg-slate-900/80',
  ]}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href="/">
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
      <ul
        class:list={[
          'flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium',
          position === 'left' ? 'md:mr-auto rtl:md:mr-0 rtl:md:ml-auto' : 'md:ml-auto rtl:md:ml-0 rtl:md:mr-auto',
        ]}
      >
        {
          links.map(({ text, href, icon }) => (
            <li class={links?.length ? 'md:mr-0.5 rtl:md:mr-0 rtl:md:ml-0.5' : ''}>
              <a
                class:list={[
                  'hover:text-link dark:hover:text-white px-4 py-3 flex items-center font-medium',
                  { 'text-link dark:text-white': href === currentPath },
                ]}
                href={href}
              >
                {icon && <Twemoji emoji={icon} size="1.2em" class="mr-1 inline-flex items-center" />}
                <span>{text}</span>
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center flex md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex items-center gap-2">
          <LanguageSelector />
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href={'/rss.xml'}
              >
                <Icon name="tabler:rss" class="w-5 h-5" />
              </a>
            )
          }
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map(({ text, href, class: className }) => (
                <Button 
                  href={href}
                  class={`ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto ${className || ''}`}
                >
                  {text}
                </Button>
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>

<style is:global>
  [data-aw-toggle-menu].expanded .line1 {
    transform: rotate(-45deg) translate(-12px, 8px);
  }

  [data-aw-toggle-menu].expanded .line2 {
    transform: rotate(45deg) translate(4px, -16px);
  }
</style>
